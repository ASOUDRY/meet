{"ast":null,"code":"var _jsxFileName = \"/Users/asoudry/Desktop/meet/src/EventList.jsx\";\nimport React, { Component } from 'react';\nimport Event from './Event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EventList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      storage: this.props.events,\n      number: []\n    };\n\n    this.changeValue = change => {\n      const newValue = 1;\n      newValue = change.target.value;\n      const length = this.props.events.length;\n      console.log(newValue);\n      this.setState({\n        number: newValue\n      });\n\n      if (newValue > length) {\n        console.log(\"Add more options\");\n      } else if (newValue < length) {\n        for (i = newValue; i < length; i++) {\n          this.props.events.pop();\n        }\n      } else {\n        console.log(\"no change needed\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"EventList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The number of events is \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.number,\n        onChange: this.changeValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }, this), this.props.events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Event, {\n          event: event\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default EventList;","map":{"version":3,"sources":["/Users/asoudry/Desktop/meet/src/EventList.jsx"],"names":["React","Component","Event","EventList","state","storage","props","events","number","changeValue","change","newValue","target","value","length","console","log","setState","i","pop","render","map","event","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCG,KAFgC,GAExB;AACNC,MAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,MADd;AAENC,MAAAA,MAAM,EAAE;AAFF,KAFwB;;AAAA,SAOhCC,WAPgC,GAOjBC,MAAD,IAAY;AACxB,YAAMC,QAAQ,GAAG,CAAjB;AACAA,MAAAA,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAcC,KAAzB;AACA,YAAMC,MAAM,GAAG,KAAKR,KAAL,CAAWC,MAAX,CAAkBO,MAAjC;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEJ,WAAKM,QAAL,CAAc;AACZT,QAAAA,MAAM,EAAEG;AADI,OAAd;;AAII,UAAIA,QAAQ,GAAGG,MAAf,EAAuB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,OAFD,MAGK,IAAIL,QAAQ,GAAGG,MAAf,EAAuB;AAC3B,aAAKI,CAAC,GAAGP,QAAT,EAAmBO,CAAC,GAAGJ,MAAvB,EAA+BI,CAAC,EAAhC,EAAoC;AACnC,eAAKZ,KAAL,CAAWC,MAAX,CAAkBY,GAAlB;AACA;AACD,OAJI,MAKC;AACJJ,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AACF,KA7B+B;AAAA;;AA+BhCI,EAAAA,MAAM,GAAG;AACP,wBACA;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWI,MAFlB;AAGA,QAAA,QAAQ,EAAE,KAAKC;AAHf;AAAA;AAAA;AAAA;AAAA,cAFH,EAOG,KAAKH,KAAL,CAAWC,MAAX,CAAkBc,GAAlB,CAAsBC,KAAK,iBAC1B;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA;AADF,SAASA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAeD;;AA/C+B;;AAkDlC,eAAepB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\n  state = {\n    storage: this.props.events,\n    number: []\n  }\n\n  changeValue = (change) => {\n    const newValue = 1;\n    newValue = change.target.value;\n    const length = this.props.events.length;\n\n    console.log(newValue);\n\nthis.setState({\n  number: newValue\n})\n\n    if (newValue > length) {\n      console.log(\"Add more options\")\n    }\n    else if (newValue < length) {\n     for (i = newValue; i < length; i++) {\n      this.props.events.pop()\n     }\n    }\n    else  {\n      console.log(\"no change needed\")\n    }\n  }\n  \n  render() {\n    return (\n    <ul className=\"EventList\">\n       <h1>The number of events is </h1>\n       <input\n       type=\"text\"\n       value={this.state.number}\n       onChange={this.changeValue}\n       />\n      {this.props.events.map(event =>\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      )}\n    </ul>\n  );\n  }\n}\n\nexport default EventList;"]},"metadata":{},"sourceType":"module"}