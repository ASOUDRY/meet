{"ast":null,"code":"var _jsxFileName = \"/Users/asoudry/Desktop/meet/src/EventList.jsx\";\nimport React, { Component } from 'react';\nimport Event from './Event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EventList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      number: []\n    };\n\n    this.changeValue = change => {\n      const value = change.target.value;\n      const length = this.props.events.length;\n      this.setState({\n        number: value\n      });\n\n      if (value > length) {\n        console.log(\"Add more options\");\n      } else if (value < length) {\n        for (i = value; i < length; i++) {\n          console.log(\"Anna\");\n        }\n      } else {\n        console.log(\"no change needed\");\n      }\n\n      console.log(value);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"EventList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The number of events is \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.number,\n        onChange: this.changeValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 8\n      }, this), this.props.events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Event, {\n          event: event\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default EventList;","map":{"version":3,"sources":["/Users/asoudry/Desktop/meet/src/EventList.jsx"],"names":["React","Component","Event","EventList","state","number","changeValue","change","value","target","length","props","events","setState","console","log","i","render","map","event","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCG,KAFgC,GAExB;AACNC,MAAAA,MAAM,EAAE;AADF,KAFwB;;AAAA,SAMhCC,WANgC,GAMjBC,MAAD,IAAY;AACxB,YAAMC,KAAK,GAAGD,MAAM,CAACE,MAAP,CAAcD,KAA5B;AACA,YAAME,MAAM,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBF,MAAjC;AAEJ,WAAKG,QAAL,CAAc;AACZR,QAAAA,MAAM,EAAEG;AADI,OAAd;;AAII,UAAIA,KAAK,GAAGE,MAAZ,EAAoB;AAClBI,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,OAFD,MAGK,IAAIP,KAAK,GAAGE,MAAZ,EAAoB;AACxB,aAAKM,CAAC,GAAGR,KAAT,EAAgBQ,CAAC,GAAGN,MAApB,EAA4BM,CAAC,EAA7B,EAAiC;AAC/BF,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACD,OAJI,MAKA;AACHD,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD,KA1B+B;AAAA;;AA4BhCS,EAAAA,MAAM,GAAG;AACP,wBACA;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,MAFlB;AAGA,QAAA,QAAQ,EAAE,KAAKC;AAHf;AAAA;AAAA;AAAA;AAAA,cAFH,EAOG,KAAKK,KAAL,CAAWC,MAAX,CAAkBM,GAAlB,CAAsBC,KAAK,iBAC1B;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA;AADF,SAASA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAeD;;AA5C+B;;AA+ClC,eAAejB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\n  state = {\n    number: []\n  }\n\n  changeValue = (change) => {\n    const value = change.target.value;\n    const length = this.props.events.length;\n\nthis.setState({\n  number: value\n})\n\n    if (value > length) {\n      console.log(\"Add more options\")\n    }\n    else if (value < length) {\n     for (i = value; i < length; i++) {\n       console.log(\"Anna\");\n     }\n    }\n    else {\n      console.log(\"no change needed\")\n    }\n    console.log(value)\n  }\n  \n  render() {\n    return (\n    <ul className=\"EventList\">\n       <h1>The number of events is </h1>\n       <input\n       type=\"text\"\n       value={this.state.number}\n       onChange={this.changeValue}\n       />\n      {this.props.events.map(event =>\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      )}\n    </ul>\n  );\n  }\n}\n\nexport default EventList;"]},"metadata":{},"sourceType":"module"}