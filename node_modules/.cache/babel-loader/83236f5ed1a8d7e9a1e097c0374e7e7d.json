{"ast":null,"code":"import _classCallCheck from\"/Users/asoudry/Desktop/meet/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/asoudry/Desktop/meet/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/asoudry/Desktop/meet/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/asoudry/Desktop/meet/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CitySearch=/*#__PURE__*/function(_Component){_inherits(CitySearch,_Component);var _super=_createSuper(CitySearch);function CitySearch(){var _this;_classCallCheck(this,CitySearch);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={query:'',suggestions:[]};_this.handleInputChanged=function(event){var value=event.target.value;var suggestions=_this.props.locations.filter(function(location){return location.toUpperCase().indexOf(value.toUpperCase())>-1;});_this.isClicked=function(suggestion){_this.setState({query:suggestion,suggestions:[]});_this.props.updateEvents(suggestion);};_this.setState({query:value,suggestions:suggestions});};_this.handleItemClicked=function(suggestion){_this.setState({query:suggestion});_this.props.updateEvents(suggestion);};return _this;}_createClass(CitySearch,[{key:\"render\",value:function render(){var _this2=this;console.log(this.state.suggestions);return/*#__PURE__*/_jsxs(\"div\",{className:\"CitySearch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"city\",value:this.state.query,onChange:this.handleInputChanged}),/*#__PURE__*/_jsx(\"ul\",{className:\"suggestions\",children:this.state.suggestions.map(function(suggestion){return/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){return _this2.isClicked(suggestion);},children:suggestion},suggestion);})}),/*#__PURE__*/_jsx(\"ul\",{children:/*#__PURE__*/_jsx(\"li\",{className:\"all\",onClick:function onClick(){return _this2.handleItemClicked(\"all\");},children:/*#__PURE__*/_jsx(\"b\",{children:\"See all cities\"})})})]});}}]);return CitySearch;}(Component);export default CitySearch;","map":{"version":3,"sources":["/Users/asoudry/Desktop/meet/src/CitySearch.jsx"],"names":["React","Component","CitySearch","state","query","suggestions","handleInputChanged","event","value","target","props","locations","filter","location","toUpperCase","indexOf","isClicked","suggestion","setState","updateEvents","handleItemClicked","console","log","map"],"mappings":"waAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,2FAEMC,CAAAA,U,2UAEJC,K,CAAQ,CACNC,KAAK,CAAE,EADD,CAENC,WAAW,CAAE,EAFP,C,OAKRC,kB,CAAqB,SAACC,KAAD,CAAW,CAC9B,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B,CACA,GAAMH,CAAAA,WAAW,CAAG,MAAKK,KAAL,CAAWC,SAAX,CAAqBC,MAArB,CAA4B,SAACC,QAAD,CAAc,CAC5D,MAAOA,CAAAA,QAAQ,CAACC,WAAT,GAAuBC,OAAvB,CAA+BP,KAAK,CAACM,WAAN,EAA/B,EAAsD,CAAC,CAA9D,CACD,CAFmB,CAApB,CAMF,MAAKE,SAAL,CAAiB,SAACC,UAAD,CAAgB,CAC/B,MAAKC,QAAL,CAAc,CACZd,KAAK,CAAEa,UADK,CAEZZ,WAAW,CAAE,EAFD,CAAd,EAKA,MAAKK,KAAL,CAAWS,YAAX,CAAwBF,UAAxB,EACD,CAPD,CASE,MAAKC,QAAL,CAAc,CACZd,KAAK,CAAEI,KADK,CAEZH,WAAW,CAAEA,WAFD,CAAd,EAID,C,OAEDe,iB,CAAoB,SAACH,UAAD,CAAgB,CAClC,MAAKC,QAAL,CAAc,CACZd,KAAK,CAAEa,UADK,CAAd,EAIA,MAAKP,KAAL,CAAWS,YAAX,CAAwBF,UAAxB,EACD,C,4DAED,iBAAS,iBACPI,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWE,WAAvB,EACA,mBACE,aAAK,SAAS,CAAC,YAAf,wBACI,cACF,IAAI,CAAC,MADH,CAEF,SAAS,CAAC,MAFR,CAGF,KAAK,CAAE,KAAKF,KAAL,CAAWC,KAHhB,CAIF,QAAQ,CAAE,KAAKE,kBAJb,EADJ,cAOC,WAAI,SAAS,CAAC,aAAd,UAEI,KAAKH,KAAL,CAAWE,WAAX,CAAuBkB,GAAvB,CAA2B,SAACN,UAAD,qBAC1B,WAAqB,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACD,SAAL,CAAeC,UAAf,CAAN,EAA9B,UACKA,UADL,EAASA,UAAT,CAD0B,EAA3B,CAFJ,EAPD,cAeE,iCACI,WAAI,SAAS,CAAC,KAAd,CAAoB,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACG,iBAAL,CAAuB,KAAvB,CAAN,EAA7B,uBACE,qCADF,EADJ,EAfF,GADF,CAuBD,C,wBA/DsBnB,S,EAkEzB,cAAeC,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n\n  state = {\n    query: '',\n    suggestions: []\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n\n    \n\n  this.isClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: []\n    });\n\n    this.props.updateEvents(suggestion);\n  }\n    \n    this.setState({\n      query: value,\n      suggestions: suggestions\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion\n    });\n  \n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    console.log(this.state.suggestions);\n    return (\n      <div className=\"CitySearch\">\n          <input\n        type=\"text\"\n        className=\"city\"\n        value={this.state.query}\n        onChange={this.handleInputChanged}\n      />\n       <ul className=\"suggestions\">\n       \n          {this.state.suggestions.map((suggestion) => (\n            <li key={suggestion} onClick={() => this.isClicked(suggestion)}>\n                {suggestion}\n            </li>\n          ))}\n        </ul>\n        <ul>\n            <li className=\"all\" onClick={() => this.handleItemClicked(\"all\")}>\n              <b>See all cities</b>\n            </li>\n      </ul>\n      </div>\n    )\n  }\n}\n\nexport default CitySearch;"]},"metadata":{},"sourceType":"module"}