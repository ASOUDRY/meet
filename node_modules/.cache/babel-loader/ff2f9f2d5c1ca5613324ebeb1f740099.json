{"ast":null,"code":"var _jsxFileName = \"/Users/asoudry/Desktop/meet/src/EventList.jsx\";\nimport React, { Component } from 'react';\nimport Event from './Event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EventList extends Component {\n  render() {\n    handleInputChanged = event => {\n      const value = event.target.value;\n      console.log(value); // const suggestions = this.props.locations.filter((location) => {\n      //   return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n      // });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"EventList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The number of events is \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.props.events.length,\n        onChange: this.handleInputChanged()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 8\n      }, this), this.props.events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Event, {\n          event: event\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default EventList;","map":{"version":3,"sources":["/Users/asoudry/Desktop/meet/src/EventList.jsx"],"names":["React","Component","Event","EventList","render","handleInputChanged","event","value","target","console","log","props","events","length","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAChCG,EAAAA,MAAM,GAAG;AAEPC,IAAAA,kBAAkB,GAAIC,KAAD,IAAW;AAC9B,YAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAF8B,CAG9B;AACA;AACA;AACD,KAND;;AAQA,wBACA;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,MAAX,CAAkBC,MAFzB;AAGA,QAAA,QAAQ,EAAE,KAAKR,kBAAL;AAHV;AAAA;AAAA;AAAA;AAAA,cAFH,EAOG,KAAKM,KAAL,CAAWC,MAAX,CAAkBE,GAAlB,CAAsBR,KAAK,iBAC1B;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA;AADF,SAASA,KAAK,CAACS,EAAf;AAAA;AAAA;AAAA;AAAA,cADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAeD;;AA1B+B;;AA6BlC,eAAeZ,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n   \n    handleInputChanged = (event) => {\n      const value = event.target.value;\n      console.log(value);\n      // const suggestions = this.props.locations.filter((location) => {\n      //   return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n      // });\n    }\n\n    return (\n    <ul className=\"EventList\">\n       <h1>The number of events is </h1>\n       <input\n       type=\"text\"\n       value={this.props.events.length}\n       onChange={this.handleInputChanged()}\n       />\n      {this.props.events.map(event =>\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      )}\n    </ul>\n  );\n  }\n}\n\nexport default EventList;"]},"metadata":{},"sourceType":"module"}